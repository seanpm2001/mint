type X.Y {
  blah : String
}

type X {
  name : String,
  y: X.Y
}

component Main {
  fun x (input : Object) : Result(Object.Error, x) {
    decode input as X
  }

  fun render : String {
    x(``)

    ""
  }
}
--------------------------------------------------------------------------------
const A = _R({
  blah: [
    "blah",
    Decoder.string
  ]
});

const B = _R({
  name: [
    "name",
    Decoder.string
  ],
  y: [
    "y",
    ((_)=>A.decode(_)),
    ((_)=>A.encode(_))
  ]
});

class C extends _C {
  a(b) {
    return ((_)=>B.decode(_))(b);
  }

  render() {
    this.a();
    return ``;
  }
};

C.displayName = "Main";
