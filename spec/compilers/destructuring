type Test {
  Item(
    matchString : String,
    content : String,
    key : String)
  None
}

component Main {
  fun content (item : Test) : String {
    case item {
      Test.Item(content) => content
      Test.None => ""
    }
  }

  fun render : String {
    content(
      Test.Item(
        matchString: "MATCHSTRING",
        content: "CONTENT",
        key: "KEY"))
  }
}
--------------------------------------------------------------------------------
class A extends _E {
  constructor(_0, _1, _2) {
    super();
    this._0 = _0;
    this._1 = _1;
    this._2 = _2;
    this.length = 3;

    this._mapping = {
      matchString: "_0",
      content: "_1",
      key: "_2"
    };
  }
};

class B extends _E {
  constructor() {
    super();
    this.length = 0;
  }
};

class C extends _C {
  a(b) {
    return _match(b,[
      [
        _PE(A,_PR([
          [
            "content",
            _PV
          ]
        ])),
        (c) => {
          return c
        }
      ],
      [
        _PE(B,[]),
        () => {
          return ``
        }
      ]
    ]);
  }

  render() {
    return this.a(_n(A)(`MATCHSTRING`, `CONTENT`, `KEY`));
  }
};

C.displayName = "Main";
