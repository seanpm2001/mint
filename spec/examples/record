--------------------------------------------------------------record_with_holes
type Test {
  a : Array(a),
  b : Number
}
------------------------------------record_not_found_matching_record_definition
component Main {
  state data = { name: "" }

  fun render : Html {
    <div>
      data.name
    </div>
  }
}
------------------------------------record_not_found_matching_record_definition
component Test {
  property data = { name: "" }

  fun render : Html {
    <div>
      data.name
    </div>
  }
}

component Main {
  fun render : Html {
    <Test />
  }
}

-------------------------------------------------------------------------------
component Main {
  fun test : Object {
    encode {
      a: "Hello",
      b: "Blah"
    }
  }

  fun render : String {
    ""
  }
}
-------------------------------------------------------------------------------
component Main {
  fun test : Object {
    encode {
      a: "Hello",
      b: {
        c: "Blah"
      }
    }
  }

  fun render : String {
    ""
  }
}
-------------------------------------------------------------------------------
type Test {
  string : String
}

component Main {
  fun render : String {
    { string: "" }.string
  }
}
-------------------------------------------------------------------------------
type Test {
  a : String,
  b : Number
}

component Main {
  fun test : Test {
    {
      a: "Hello",
      b: 0
    }
  }

  fun render : String {
    ""
  }
}
-------------------------------------------------------------------------------
type A {
  name : String
}

component Main {
  state data = { name: "" }

  fun render : Html {
    <div>
      data.name
    </div>
  }
}
-------------------------------------------------------------------------------
type Test {
  a : String,
  b : Number
}

component Main {
  fun test : Test {
    {
      a: "Hello",
      b: 0
    }
  }

  fun render : String {
    ""
  }
}
-------------------------------------------------------------------------------
type Test {
  a : String,
  b : Number
}

type Test2 {
  a : String,
  b : Number
}

component Main {
  fun test : Test {
    {
      a: "Hello",
      b: 0
    }
  }

  fun render : String {
    test().a
  }
}
--------------------------------------------------------------------------------
type Test {
  a : String,
  b : Number
}

type Test2 {
  a : String,
  b : Number
}

component Main {
  state test : Test =
    {
      a: "Hello",
      b: 0
    }

  fun render : String {
    test.a
  }
}
